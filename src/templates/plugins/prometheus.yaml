{%- if plugins.prometheus.enabled %}
{%- set version = "3.1.0" -%}
{%- if plugins.prometheus.version -%}
{%- set version = plugins.prometheus.version -%}
{%- endif -%}
services:
  prometheus:
    image: 'prom/prometheus:v{{ version }}'
    container_name: 'prometheus'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml' 
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-remote-write-receiver'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=6h'
      - '--storage.tsdb.retention.size=4GB'  
      - '--storage.tsdb.max-block-duration=2h' 
      - '--storage.tsdb.min-block-duration=2h'
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/ready || exit 1"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.docker.localhost`)"
      - 'traefik.http.routers.prometheus.entrypoints=web'
    volumes:
      - 'prometheus_data:/prometheus'
      - '../configurations/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
      - '../configurations/prometheus/scrape_configs:/etc/prometheus/scrape_configs'
      {%- if plugins.prometheus.customized %}
      - '$HOME/.ministack/{{ name }}/prometheus:/etc/prometheus/ministack'
      {%- endif %}
    networks:
      ministack:
        ipv4_address: '10.1.0.11'

volumes:
  prometheus_data: {}
{%- endif %}