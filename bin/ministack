#!/bin/bash

set -e

# Function to display usage information
usage() {
    echo ""
    echo "Usage: $0 -config <config_file> -command <dry-run|start|stop>"
    echo "Options:"
    echo "  -config    Path to the configuration file (mandatory)"
    echo "  -command   Command to execute (mandatory; must be 'dry-run', 'start' or 'stop')"
    echo ""
    exit 1
}

# Function for logging
log() {
    local level="$1"
    shift
    echo "[$level] $@"
}

# Check for missing arguments
if [[ "$#" -eq 0 ]]; then
    log "ERROR" "No arguments provided"
    usage
fi

# Allowed commands
ALLOWED_COMMANDS=("start" "stop" "dry-run")

# Parse arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -config) config="$2"; shift ;;
        -command) command="$2"; shift ;;
        -help) usage ;;
        *) log "ERROR" "Invalid parameter: $1"; usage ;;
    esac
    shift
done

# Validate mandatory arguments
if [[ -z "$config" ]]; then
    log "ERROR" "The -config parameter is mandatory"
    usage
    exit 1
fi
if [[ -z "$command" ]]; then
    log "ERROR" "The -command parameter is mandatory"
    usage
    exit 1
fi

# Validate file existence
if [[ ! -f "$config" ]]; then
    log "ERROR" "Config file '$config' not found"
    exit 1
fi

# Validate the command
if [[ ! " ${ALLOWED_COMMANDS[@]} " =~ " $command " ]]; then
    log "ERROR" "Invalid command: '$command'. Allowed values are: ${ALLOWED_COMMANDS[*]}"
    usage
    exit 1
fi

# Information logs
echo "============================================================="
log "INFO" "Command: $command"
log "INFO" "Config file: $config"
echo "============================================================="

task ministack-$command -- "$config"
